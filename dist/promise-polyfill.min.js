var global=global||window||this,NativePromise=global.Promise,nativePromiseSupported=NativePromise&&"resolve"in NativePromise&&"reject"in NativePromise&&"all"in NativePromise&&"race"in NativePromise&&function(){var t;return new NativePromise(function(n){t=n}),"function"==typeof t}();!function(){var t=Array.isArray,n=function(t){return"function"==typeof t},e=function(t){return t&&n(t.then)},o=function(t,n){var e=this;void 0===e._status&&setTimeout(function(){e._status=t,r.call(e,n)})},r=function(t){for(var n,e=this,o=1===e._status,r=e[o?"_resolves":"_rejects"];n=r.shift();)t=n.call(e,t)||t;e[o?"_value":"_reason"]=t,e._resolves=e._rejects=void 0},i=function(t){if(!n(t))throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");var e=this;e._value,e._reason,e._status=void 0,e._resolves=[],e._rejects=[],t(function(t){o.apply(e,[1].concat([t]))},function(t){o.apply(e,[2].concat([t]))})};i.prototype.then=function(t,o){var r=this;return i(function(i,u){function s(o){var r=n(t)&&t(o)||o;e(r)?r.then(function(t){i(t)},function(t){u(t)}):i(r)}function a(t){t=n(o)&&o(t)||t,u(t)}void 0===r._status?(r._resolves.push(s),r._rejects.push(a)):1===r._status?s(r._value):2===r._status&&a(r._reason)})},i.prototype.catch=function(t){return this.then(void 0,t)},i.prototype.delay=function(t,n){return this.then(function(e){return i.delay(t,n||e)})},i.delay=function(t,n){return i(function(e,o){setTimeout(function(){e(n)},t)})},i.resolve=function(t){return i(function(n,e){n(t)})},i.reject=function(t){return i(function(n,e){e(t)})},i.all=function(n){if(!t(n))throw new TypeError("You must pass an array to all.");return i(function(t,e){function o(t){e(t)}function r(n,e){u[n]=e,0==--a&&t(u)}for(var i=0,u=[],s=n.length,a=s;i<s;i++)n[i].then(function(t){return function(n){r(t,n)}}(i),o)})},i.race=function(n){if(!t(n))throw new TypeError("You must pass an array to race.");return i(function(t,e){function o(n){t(n)}function r(t){e(t)}for(var i=0,u=n.length;i<u;i++)n[i].then(o,r)})},"undefined"!=typeof exports&&exports?(exports.Promise=nativePromiseSupported?NativePromise:i,exports.Polyfill=i):"function"==typeof define&&define.amd?define(function(){return nativePromiseSupported?NativePromise:i}):nativePromiseSupported||(global.Promise=i),window.PM=i}();